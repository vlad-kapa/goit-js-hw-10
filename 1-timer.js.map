{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst refs = {\n  dateInput: document.querySelector('.date-input'),\n  dateBtn: document.querySelector('.date-btn'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet intervalId = null;\nlet userSelectedDate = null;\n\nrefs.dateBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selected = selectedDates[0];\n\n    if (selected <= Date.now()) {\n      iziToast.warning({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      refs.dateBtn.disabled = true;\n    } else {\n      userSelectedDate = selected;\n      refs.dateBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(refs.dateInput, options);\n\nconst onStartBtnClick = e => {\n  refs.dateInput.disabled = true;\n  refs.dateBtn.disabled = true;\n\n  intervalId = setInterval(() => {\n    const diff = userSelectedDate - Date.now();\n    if (diff <= 0) {\n      clearInterval(intervalId);\n      updateTimer(0);\n      refs.dateInput.disabled = false;\n      return;\n    }\n    updateTimer(diff);\n  }, 1000);\n};\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  refs.days.textContent = pad(days);\n  refs.hours.textContent = pad(hours);\n  refs.minutes.textContent = pad(minutes);\n  refs.seconds.textContent = pad(seconds);\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\nrefs.dateBtn.addEventListener('click', onStartBtnClick);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["refs","intervalId","userSelectedDate","options","selectedDates","selected","iziToast","flatpickr","onStartBtnClick","diff","updateTimer","ms","days","hours","minutes","seconds","convertMs","pad","value"],"mappings":"+IAMA,MAAMA,EAAO,CACX,UAAW,SAAS,cAAc,aAAa,EAC/C,QAAS,SAAS,cAAc,WAAW,EAC3C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAa,KACbC,EAAmB,KAEvBF,EAAK,QAAQ,SAAW,GAExB,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAE5BC,GAAY,KAAK,OACnBC,EAAS,QAAQ,CACf,QAAS,qCACT,SAAU,UAClB,CAAO,EACDN,EAAK,QAAQ,SAAW,KAExBE,EAAmBG,EACnBL,EAAK,QAAQ,SAAW,GAE3B,CACH,EAEAO,EAAUP,EAAK,UAAWG,CAAO,EAEjC,MAAMK,EAAkB,GAAK,CAC3BR,EAAK,UAAU,SAAW,GAC1BA,EAAK,QAAQ,SAAW,GAExBC,EAAa,YAAY,IAAM,CAC7B,MAAMQ,EAAOP,EAAmB,KAAK,IAAG,EACxC,GAAIO,GAAQ,EAAG,CACb,cAAcR,CAAU,EACxBS,EAAY,CAAC,EACbV,EAAK,UAAU,SAAW,GAC1B,MACD,CACDU,EAAYD,CAAI,CACjB,EAAE,GAAI,CACT,EAEA,SAASC,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDX,EAAK,KAAK,YAAciB,EAAIL,CAAI,EAChCZ,EAAK,MAAM,YAAciB,EAAIJ,CAAK,EAClCb,EAAK,QAAQ,YAAciB,EAAIH,CAAO,EACtCd,EAAK,QAAQ,YAAciB,EAAIF,CAAO,CACxC,CAEA,SAASE,EAAIC,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAlB,EAAK,QAAQ,iBAAiB,QAASQ,CAAe,EAEtD,SAASQ,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}